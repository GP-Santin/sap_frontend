name: deploy

on:
  push:
    branches: [main]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Node.js and npm
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Create .htaccess
        run: |
          cat > src/.htaccess <<EOF
          # Configurações específicas para React
          <IfModule mod_rewrite.c>
            RewriteEngine On
            RewriteBase /
            RewriteRule ^index\.html$ - [L]
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteRule . /index.html [L]
          </IfModule>
          EOF
        working-directory: ${{ github.workspace }}

  #deploy development
  deploy-development:
    runs-on: ubuntu-latest
    environment:
      name: development
      url: ${{ vars.URL }}
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Hostinger Deployment
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-rlgoDzvc --delete"
          SOURCE: "src/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
          TARGET: ${{ secrets.REMOTE_PATH }}

  #deploy staging
  deploy-staging:
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: ${{ vars.URL }}
    needs: deploy-development
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Hostinger Deployment
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-rlgoDzvc --delete"
          SOURCE: "src/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
          TARGET: ${{ secrets.REMOTE_PATH }}

  #deploy production
  deploy-production:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ vars.URL }}
    needs: deploy-staging
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Hostinger Deployment
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-rlgoDzvc --delete"
          SOURCE: "src/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
          TARGET: ${{ secrets.REMOTE_PATH }}
